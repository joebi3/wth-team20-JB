# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
env:
  REGISTRY_NAME: rgy6qm6rnp75cwthreg.azurecr.io
  REPOSITORY_NAME: "wth/dotnetcoreapp"
  DOCKER_FOLDER_PATH: Application/src/RazorPagesTestSample
  TAG: ${{ github.run_number }}
  
name: .NET
on:
  push:
    branches: main
    paths: 'Application/**'
  pull_request:
    branches: main
    paths: 'Application/**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore
      run: dotnet restore Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
      continue-on-error: true
    - name: Build
      if: steps.Restore.outcome == 'success'
      run: dotnet build --no-restore Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
      continue-on-error: true
    - name: Test
      if: success()
      run: dotnet test Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj --no-build --verbosity normal 
      continue-on-error: true
    - name: Notification
      if: failure()
      run: gh issue create --title "I found a bug" --body "Nothing works"
      continue-on-error: true


  newbuild:
    runs-on: ubuntu-latest
    needs: build 
    steps:


      
    - uses: actions/checkout@v3

    #- name: debug
    #  run: echo "My environment variable values: $ACR_USERNAME"
    #  env:
    #    ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
        
    - name: Docker_login2
      run: docker login $REGISTRY_NAME -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}

    - name: Docker_build2
      run: docker build -t $REGISTRY_NAME/$REPOSITORY_NAME:$TAG --build-arg build_version=$TAG $DOCKER_FOLDER_PATH

    - name: Docker_push2
      run: docker push $REGISTRY_NAME/$REPOSITORY_NAME:$TAG

